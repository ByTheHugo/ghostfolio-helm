security:gitleaks:
  stage: security
  image:
    name: "${REGISTRY_URL}/paas/zricethezav/gitleaks:${GITLEAKS_VERSION}"
    entrypoint: [""]
  before_script:
    - gitleaks version
  script:
    - gitleaks dir --follow-symlinks -v -f junit -r gitleaks-report.xml
  artifacts:
    paths:
      - gitleaks-report.xml
    reports:
      junit: gitleaks-report.xml

lint:helm:
  stage: lint
  image: "${REGISTRY_URL}/paas/alpine/helm:${HELM_VERSION}"
  before_script:
    - helm version
  script:
    - cd chart
    - helm dependency update
    - |
      helm lint \
        --set "ghostfolio.ACCESS_TOKEN_SALT=superSecretTokenSalt" \
        --set "ghostfolio.JWT_SECRET_KEY=superSecretJwtKey"

deploy:helm:
  stage: deploy
  image: "${REGISTRY_URL}/paas/alpine/helm:${HELM_VERSION}"
  before_script:
    - apk add --no-cache kubectl
    - helm version
    - kubectl version --client
  script:
    - cd chart
    - helm dependency update
    - |
      helm upgrade \
        --install \
        --set "ghostfolio.ACCESS_TOKEN_SALT=superSecretTokenSalt" \
        --set "ghostfolio.JWT_SECRET_KEY=superSecretJwtKey" \
        --set "global.defaultStorageClass=${HELM_STORAGE_CLASS}" \
        --create-namespace \
        --wait --wait-for-jobs \
        --timeout "$HELM_TIMEOUT" \
        -n "$HELM_NAMESPACE" \
        "$HELM_RELEASE" ./
  after_script:
    - helm uninstall -n "$HELM_NAMESPACE" "$HELM_RELEASE"
    - kubectl delete -n "$HELM_NAMESPACE" pvc --all --ignore-not-found
  retry: 2
  rules:
    - if: '$SKIP_DEPLOY=="true"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - when: on_success

cve:helm:trivy:
  stage: cve
  image:
    name: "${REGISTRY_URL}/paas/aquasec/trivy:${TRIVY_VERSION}"
    entrypoint: [""]
  before_script:
      - apk add --no-cache yq
      - yq --version
      - trivy --version

      # Downloading template format from Github
      - wget https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/junit.tpl -O junit.tpl

      # Update vuln db
      - trivy clean --scan-cache
      - trivy --cache-dir .trivycache/ image --download-db-only --no-progress
  script:
      # We don't wan't to scan chart dependencies
      - yq -i 'del(.dependencies)' chart/Chart.yaml

      # Fail on specified vulnerabilities
      - |
        trivy config \
          --exit-code 1 \
          --ignorefile .trivyignore.yaml \
          --severity "$TRIVY_SEVERITY" \
          --helm-set "ghostfolio.ACCESS_TOKEN_SALT=superSecretTokenSalt" \
          --helm-set "ghostfolio.JWT_SECRET_KEY=superSecretJwtKey" \
          --format template \
          --template "@junit.tpl" \
          -o junit-report.xml \
          chart
  cache:
      paths:
      - .trivycache/
  artifacts:
      paths:
          - junit-report.xml
      reports:
          junit: junit-report.xml
  retry: 2
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$IGNORE_TRIVY_CVE == "true"'
      allow_failure: true
    - when: on_success
